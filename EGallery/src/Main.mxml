<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   minWidth="955" minHeight="600" xmlns:ns1="*">
	<fx:Style source="Main.css" />
	<fx:Script>
		<![CDATA[
			import mx.controls.Image;
			import mx.controls.SWFLoader;
			import mx.controls.listClasses.BaseListData;
			import mx.core.UIComponent;
			import mx.core.UIComponentCachePolicy;
			import mx.graphics.codec.JPEGEncoder;
			
			import org.net9.tt.*;
			
			import spark.components.List;
			
			//private var app:FlexView3D;
			private var loader:org.net9.tt.Loader = new org.net9.tt.Loader();
			private var _currentIndex:int = 0;
			private var _previousIndex:int = -1;
			
			public function get previousIndex():int
			{
				return _previousIndex;
			}

			public function get currentIndex():int
			{
				return _currentIndex;
			}

			public function set currentIndex(value:int):void
			{
				_previousIndex = _currentIndex;
				_currentIndex = value;
			}

			private function createScene(): void
			{
				//app = new FlexView3D();
				//holder.addChild(app);
				
				var path:String = "mei.zip";
				trace(path);
				loader.log = appendConsole;
				loader.addEventListener(Event.COMPLETE, function(e:Event):void {
					appendConsole("event: loading complete");
					var l:org.net9.tt.Loader = e.target as org.net9.tt.Loader;
					var clip:Array = l.manifect.clip;
					
					for (var i:int = 0; i < clip.length; i++) {
						var iimage:IndexedImage = clip[i] as IndexedImage;
						var image:Image = new Image();
						image.width = canvas.width;
						image.height = canvas.height;
						image.data = iimage.data;
						image.visible = false;
						canvas.addChild(image);
					}
					
					swapBuffer(0);
				});
				loader.Load(path);
			}
			

			protected function button1_clickHandler(event:MouseEvent):void
			{
				createScene();
			}
			
			public function appendConsole(str:String):void
			{
				consoleText.text += str + "\r\n";
			}

			private function swapBuffer(pos:int):void
			{
				var prev:int = this.previousIndex;
				
				canvas.getChildAt(pos).visible = true;
				if (prev > 0) {
					canvas.getChildAt(prev).visible = false;
				}
				
				currentIndex = pos;
			}
			
			protected function LeftButton_clickHandler(event:MouseEvent):void
			{
				var l:org.net9.tt.Loader = loader;
				var clip:Array = l.manifect.clip;
				var newIndex:int = (currentIndex - 1 + clip.length) % clip.length;
				swapBuffer(newIndex);
			}
			
			protected function RightButton_clickHandler(event:MouseEvent):void
			{
				var l:org.net9.tt.Loader = loader;
				var clip:Array = l.manifect.clip;
				var newIndex:int = (currentIndex + 1) % clip.length;
				swapBuffer(newIndex);
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<mx:Grid id="holder" width="387" height="22" x="66" y="26" backgroundColor="#E6E6E6">
	</mx:Grid>
	<s:Button x="480" y="247" label="Button" click="button1_clickHandler(event)"/>
	<s:Button x="476" y="203" label="Button2"/>
	<s:TextArea x="66" y="56" id="consoleText" styleName="consoleText" width="387" height="322" text="hi"/>
	<mx:Canvas id="canvas" x="565" y="42" width="267" height="265">
	</mx:Canvas>
	<s:Button x="565" y="315" label="LeftButton" id="LeftButton" click="LeftButton_clickHandler(event)"/>
	<s:Button x="757" y="315" label="RightButton" id="RightButton" click="RightButton_clickHandler(event)"/>
	
</s:Application>
